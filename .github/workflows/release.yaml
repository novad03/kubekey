name: Release

on:
  push:
    tags:
      - 'v*'
jobs:
  release-binary:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
        
      - name: Build Release Asset
        run: |
          make binary
          tar -zcvf kubekey-${{ steps.get_version.outputs.VERSION }}-linux-amd64.tar.gz -C ./output/linux/amd64 kk
          md5sum ./output/linux/amd64/kk > kubekey-${{ steps.get_version.outputs.VERSION }}-linux-amd64.md5
          tar -zcvf kubekey-${{ steps.get_version.outputs.VERSION }}-linux-arm64.tar.gz -C ./output/linux/arm64 kk
          md5sum ./output/linux/arm64/kk > kubekey-${{ steps.get_version.outputs.VERSION }}-linux-arm64.md5
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
     
      - name: Upload Release Asset Binary (amd64)
        id: upload-release-asset-amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./kubekey-${{ steps.get_version.outputs.VERSION }}-linux-amd64.tar.gz
          asset_name: kubekey-${{ steps.get_version.outputs.VERSION }}-linux-amd64.tar.gz
          asset_content_type: application/tar.gz   

      - name: Upload Release Asset MD5 (amd64)
        id: upload-release-asset-md5-amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./kubekey-${{ steps.get_version.outputs.VERSION }}-linux-amd64.md5
          asset_name: kubekey-${{ steps.get_version.outputs.VERSION }}-linux-amd64.md5
          asset_content_type: application/tar.gz 

      - name: Upload Release Asset Binary (arm64)
        id: upload-release-asset-arm64 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./kubekey-${{ steps.get_version.outputs.VERSION }}-linux-arm64.tar.gz
          asset_name: kubekey-${{ steps.get_version.outputs.VERSION }}-linux-arm64.tar.gz
          asset_content_type: application/tar.gz   

      - name: Upload Release Asset MD5 (arm64)
        id: upload-release-asset-md5-arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./kubekey-${{ steps.get_version.outputs.VERSION }}-linux-arm64.md5
          asset_name: kubekey-${{ steps.get_version.outputs.VERSION }}-linux-arm64.md5
          asset_content_type: application/tar.gz 